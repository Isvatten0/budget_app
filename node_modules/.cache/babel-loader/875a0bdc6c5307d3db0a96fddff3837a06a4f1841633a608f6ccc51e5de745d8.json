{"ast":null,"code":"var _jsxFileName = \"/workspace/src/contexts/AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { supabase } from '../lib/supabase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport function AuthProvider({\n  children\n}) {\n  _s();\n  const [user, setUser] = useState(null);\n  const [session, setSession] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Get initial session\n    supabase.auth.getSession().then(({\n      data: {\n        session\n      }\n    }) => {\n      var _session$user;\n      setSession(session);\n      setUser((_session$user = session === null || session === void 0 ? void 0 : session.user) !== null && _session$user !== void 0 ? _session$user : null);\n      setLoading(false);\n    });\n\n    // Listen for auth changes\n    const {\n      data: {\n        subscription\n      }\n    } = supabase.auth.onAuthStateChange((_event, session) => {\n      var _session$user2;\n      setSession(session);\n      setUser((_session$user2 = session === null || session === void 0 ? void 0 : session.user) !== null && _session$user2 !== void 0 ? _session$user2 : null);\n      setLoading(false);\n    });\n    return () => subscription.unsubscribe();\n  }, []);\n  const signUp = async (email, password) => {\n    const {\n      error\n    } = await supabase.auth.signUp({\n      email,\n      password\n    });\n    return {\n      error\n    };\n  };\n  const signIn = async (email, password) => {\n    const {\n      error\n    } = await supabase.auth.signInWithPassword({\n      email,\n      password\n    });\n    return {\n      error\n    };\n  };\n  const signOut = async () => {\n    await supabase.auth.signOut();\n  };\n  const value = {\n    user,\n    session,\n    loading,\n    signUp,\n    signIn,\n    signOut\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(AuthProvider, \"sIDOCMze9iVqwxkgWIhOu8vskSI=\");\n_c = AuthProvider;\nexport function useAuth() {\n  _s2();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n}\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","supabase","jsxDEV","_jsxDEV","AuthContext","undefined","AuthProvider","children","_s","user","setUser","session","setSession","loading","setLoading","auth","getSession","then","data","_session$user","subscription","onAuthStateChange","_event","_session$user2","unsubscribe","signUp","email","password","error","signIn","signInWithPassword","signOut","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["/workspace/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react'\nimport { User, Session } from '@supabase/supabase-js'\nimport { supabase } from '../lib/supabase'\n\ninterface AuthContextType {\n  user: User | null\n  session: Session | null\n  loading: boolean\n  signUp: (email: string, password: string) => Promise<{ error: any }>\n  signIn: (email: string, password: string) => Promise<{ error: any }>\n  signOut: () => Promise<void>\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined)\n\nexport function AuthProvider({ children }: { children: React.ReactNode }) {\n  const [user, setUser] = useState<User | null>(null)\n  const [session, setSession] = useState<Session | null>(null)\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    // Get initial session\n    supabase.auth.getSession().then(({ data: { session } }) => {\n      setSession(session)\n      setUser(session?.user ?? null)\n      setLoading(false)\n    })\n\n    // Listen for auth changes\n    const {\n      data: { subscription },\n    } = supabase.auth.onAuthStateChange((_event, session) => {\n      setSession(session)\n      setUser(session?.user ?? null)\n      setLoading(false)\n    })\n\n    return () => subscription.unsubscribe()\n  }, [])\n\n  const signUp = async (email: string, password: string) => {\n    const { error } = await supabase.auth.signUp({\n      email,\n      password,\n    })\n    return { error }\n  }\n\n  const signIn = async (email: string, password: string) => {\n    const { error } = await supabase.auth.signInWithPassword({\n      email,\n      password,\n    })\n    return { error }\n  }\n\n  const signOut = async () => {\n    await supabase.auth.signOut()\n  }\n\n  const value = {\n    user,\n    session,\n    loading,\n    signUp,\n    signIn,\n    signOut,\n  }\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  )\n}\n\nexport function useAuth() {\n  const context = useContext(AuthContext)\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider')\n  }\n  return context\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}