{"ast":null,"code":"import React,{useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const FloatingDecorations=()=>{const[decorations,setDecorations]=useState([]);const decorationIcons=['💰','💎','⭐','🏆','🎯','🔥','⚡','💫','✨','🌟'];useEffect(()=>{const addRandomDecoration=()=>{const newDecoration={id:Math.random().toString(36).substr(2,9),icon:decorationIcons[Math.floor(Math.random()*decorationIcons.length)],x:Math.random()*(window.innerWidth-100),y:Math.random()*(window.innerHeight-100),size:Math.random()*20+10,// 10-30px\ndelay:Math.random()*2,duration:Math.random()*3+2// 2-5 seconds\n};setDecorations(prev=>[...prev,newDecoration]);// Remove decoration after animation\nsetTimeout(()=>{setDecorations(prev=>prev.filter(d=>d.id!==newDecoration.id));},(newDecoration.duration+newDecoration.delay)*1000);};// Add decoration every 3-8 seconds\nconst interval=setInterval(()=>{if(Math.random()<0.3){// 30% chance\naddRandomDecoration();}},3000);return()=>clearInterval(interval);},[]);return/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 pointer-events-none z-0\",children:decorations.map(decoration=>/*#__PURE__*/_jsx(\"div\",{className:\"absolute animate-random-float\",style:{left:decoration.x,top:decoration.y,fontSize:decoration.size,animationDelay:`${decoration.delay}s`,animationDuration:`${decoration.duration}s`},children:decoration.icon},decoration.id))});};export default FloatingDecorations;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","FloatingDecorations","decorations","setDecorations","decorationIcons","addRandomDecoration","newDecoration","id","Math","random","toString","substr","icon","floor","length","x","window","innerWidth","y","innerHeight","size","delay","duration","prev","setTimeout","filter","d","interval","setInterval","clearInterval","className","children","map","decoration","style","left","top","fontSize","animationDelay","animationDuration"],"sources":["/workspace/src/components/ui/FloatingDecorations.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\n\ninterface FloatingDecoration {\n  id: string\n  icon: string\n  x: number\n  y: number\n  size: number\n  delay: number\n  duration: number\n}\n\nconst FloatingDecorations: React.FC = () => {\n  const [decorations, setDecorations] = useState<FloatingDecoration[]>([])\n\n  const decorationIcons = ['💰', '💎', '⭐', '🏆', '🎯', '🔥', '⚡', '💫', '✨', '🌟']\n\n  useEffect(() => {\n    const addRandomDecoration = () => {\n      const newDecoration: FloatingDecoration = {\n        id: Math.random().toString(36).substr(2, 9),\n        icon: decorationIcons[Math.floor(Math.random() * decorationIcons.length)],\n        x: Math.random() * (window.innerWidth - 100),\n        y: Math.random() * (window.innerHeight - 100),\n        size: Math.random() * 20 + 10, // 10-30px\n        delay: Math.random() * 2,\n        duration: Math.random() * 3 + 2 // 2-5 seconds\n      }\n\n      setDecorations(prev => [...prev, newDecoration])\n\n      // Remove decoration after animation\n      setTimeout(() => {\n        setDecorations(prev => prev.filter(d => d.id !== newDecoration.id))\n      }, (newDecoration.duration + newDecoration.delay) * 1000)\n    }\n\n    // Add decoration every 3-8 seconds\n    const interval = setInterval(() => {\n      if (Math.random() < 0.3) { // 30% chance\n        addRandomDecoration()\n      }\n    }, 3000)\n\n    return () => clearInterval(interval)\n  }, [])\n\n  return (\n    <div className=\"fixed inset-0 pointer-events-none z-0\">\n      {decorations.map(decoration => (\n        <div\n          key={decoration.id}\n          className=\"absolute animate-random-float\"\n          style={{\n            left: decoration.x,\n            top: decoration.y,\n            fontSize: decoration.size,\n            animationDelay: `${decoration.delay}s`,\n            animationDuration: `${decoration.duration}s`\n          }}\n        >\n          {decoration.icon}\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default FloatingDecorations"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,QAAAC,GAAA,IAAAC,IAAA,yBAYlD,KAAM,CAAAC,mBAA6B,CAAGA,CAAA,GAAM,CAC1C,KAAM,CAACC,WAAW,CAAEC,cAAc,CAAC,CAAGN,QAAQ,CAAuB,EAAE,CAAC,CAExE,KAAM,CAAAO,eAAe,CAAG,CAAC,IAAI,CAAE,IAAI,CAAE,GAAG,CAAE,IAAI,CAAE,IAAI,CAAE,IAAI,CAAE,GAAG,CAAE,IAAI,CAAE,GAAG,CAAE,IAAI,CAAC,CAEjFN,SAAS,CAAC,IAAM,CACd,KAAM,CAAAO,mBAAmB,CAAGA,CAAA,GAAM,CAChC,KAAM,CAAAC,aAAiC,CAAG,CACxCC,EAAE,CAAEC,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,MAAM,CAAC,CAAC,CAAE,CAAC,CAAC,CAC3CC,IAAI,CAAER,eAAe,CAACI,IAAI,CAACK,KAAK,CAACL,IAAI,CAACC,MAAM,CAAC,CAAC,CAAGL,eAAe,CAACU,MAAM,CAAC,CAAC,CACzEC,CAAC,CAAEP,IAAI,CAACC,MAAM,CAAC,CAAC,EAAIO,MAAM,CAACC,UAAU,CAAG,GAAG,CAAC,CAC5CC,CAAC,CAAEV,IAAI,CAACC,MAAM,CAAC,CAAC,EAAIO,MAAM,CAACG,WAAW,CAAG,GAAG,CAAC,CAC7CC,IAAI,CAAEZ,IAAI,CAACC,MAAM,CAAC,CAAC,CAAG,EAAE,CAAG,EAAE,CAAE;AAC/BY,KAAK,CAAEb,IAAI,CAACC,MAAM,CAAC,CAAC,CAAG,CAAC,CACxBa,QAAQ,CAAEd,IAAI,CAACC,MAAM,CAAC,CAAC,CAAG,CAAC,CAAG,CAAE;AAClC,CAAC,CAEDN,cAAc,CAACoB,IAAI,EAAI,CAAC,GAAGA,IAAI,CAAEjB,aAAa,CAAC,CAAC,CAEhD;AACAkB,UAAU,CAAC,IAAM,CACfrB,cAAc,CAACoB,IAAI,EAAIA,IAAI,CAACE,MAAM,CAACC,CAAC,EAAIA,CAAC,CAACnB,EAAE,GAAKD,aAAa,CAACC,EAAE,CAAC,CAAC,CACrE,CAAC,CAAE,CAACD,aAAa,CAACgB,QAAQ,CAAGhB,aAAa,CAACe,KAAK,EAAI,IAAI,CAAC,CAC3D,CAAC,CAED;AACA,KAAM,CAAAM,QAAQ,CAAGC,WAAW,CAAC,IAAM,CACjC,GAAIpB,IAAI,CAACC,MAAM,CAAC,CAAC,CAAG,GAAG,CAAE,CAAE;AACzBJ,mBAAmB,CAAC,CAAC,CACvB,CACF,CAAC,CAAE,IAAI,CAAC,CAER,MAAO,IAAMwB,aAAa,CAACF,QAAQ,CAAC,CACtC,CAAC,CAAE,EAAE,CAAC,CAEN,mBACE3B,IAAA,QAAK8B,SAAS,CAAC,uCAAuC,CAAAC,QAAA,CACnD7B,WAAW,CAAC8B,GAAG,CAACC,UAAU,eACzBjC,IAAA,QAEE8B,SAAS,CAAC,+BAA+B,CACzCI,KAAK,CAAE,CACLC,IAAI,CAAEF,UAAU,CAAClB,CAAC,CAClBqB,GAAG,CAAEH,UAAU,CAACf,CAAC,CACjBmB,QAAQ,CAAEJ,UAAU,CAACb,IAAI,CACzBkB,cAAc,CAAE,GAAGL,UAAU,CAACZ,KAAK,GAAG,CACtCkB,iBAAiB,CAAE,GAAGN,UAAU,CAACX,QAAQ,GAC3C,CAAE,CAAAS,QAAA,CAEDE,UAAU,CAACrB,IAAI,EAVXqB,UAAU,CAAC1B,EAWb,CACN,CAAC,CACC,CAAC,CAEV,CAAC,CAED,cAAe,CAAAN,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}