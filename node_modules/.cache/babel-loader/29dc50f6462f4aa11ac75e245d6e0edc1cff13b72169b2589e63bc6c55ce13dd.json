{"ast":null,"code":"var _jsxFileName = \"/workspace/src/components/ui/FloatingDecorations.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FloatingDecorations = () => {\n  _s();\n  const [decorations, setDecorations] = useState([]);\n  const decorationIcons = ['💰', '💎', '⭐', '🏆', '🎯', '🔥', '⚡', '💫', '✨', '🌟'];\n  useEffect(() => {\n    const addRandomDecoration = () => {\n      const newDecoration = {\n        id: Math.random().toString(36).substr(2, 9),\n        icon: decorationIcons[Math.floor(Math.random() * decorationIcons.length)],\n        x: Math.random() * (window.innerWidth - 100),\n        y: Math.random() * (window.innerHeight - 100),\n        size: Math.random() * 20 + 10,\n        // 10-30px\n        delay: Math.random() * 2,\n        duration: Math.random() * 3 + 2 // 2-5 seconds\n      };\n      setDecorations(prev => [...prev, newDecoration]);\n\n      // Remove decoration after animation\n      setTimeout(() => {\n        setDecorations(prev => prev.filter(d => d.id !== newDecoration.id));\n      }, (newDecoration.duration + newDecoration.delay) * 1000);\n    };\n\n    // Add decoration every 3-8 seconds\n    const interval = setInterval(() => {\n      if (Math.random() < 0.3) {\n        // 30% chance\n        addRandomDecoration();\n      }\n    }, 3000);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 pointer-events-none z-0\",\n    children: decorations.map(decoration => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute animate-random-float\",\n      style: {\n        left: decoration.x,\n        top: decoration.y,\n        fontSize: decoration.size,\n        animationDelay: `${decoration.delay}s`,\n        animationDuration: `${decoration.duration}s`\n      },\n      children: decoration.icon\n    }, decoration.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(FloatingDecorations, \"JLZtyOv2f0eRzHk8p0lvCykNFvA=\");\n_c = FloatingDecorations;\nexport default FloatingDecorations;\nvar _c;\n$RefreshReg$(_c, \"FloatingDecorations\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","FloatingDecorations","_s","decorations","setDecorations","decorationIcons","addRandomDecoration","newDecoration","id","Math","random","toString","substr","icon","floor","length","x","window","innerWidth","y","innerHeight","size","delay","duration","prev","setTimeout","filter","d","interval","setInterval","clearInterval","className","children","map","decoration","style","left","top","fontSize","animationDelay","animationDuration","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/workspace/src/components/ui/FloatingDecorations.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\n\ninterface FloatingDecoration {\n  id: string\n  icon: string\n  x: number\n  y: number\n  size: number\n  delay: number\n  duration: number\n}\n\nconst FloatingDecorations: React.FC = () => {\n  const [decorations, setDecorations] = useState<FloatingDecoration[]>([])\n\n  const decorationIcons = ['💰', '💎', '⭐', '🏆', '🎯', '🔥', '⚡', '💫', '✨', '🌟']\n\n  useEffect(() => {\n    const addRandomDecoration = () => {\n      const newDecoration: FloatingDecoration = {\n        id: Math.random().toString(36).substr(2, 9),\n        icon: decorationIcons[Math.floor(Math.random() * decorationIcons.length)],\n        x: Math.random() * (window.innerWidth - 100),\n        y: Math.random() * (window.innerHeight - 100),\n        size: Math.random() * 20 + 10, // 10-30px\n        delay: Math.random() * 2,\n        duration: Math.random() * 3 + 2 // 2-5 seconds\n      }\n\n      setDecorations(prev => [...prev, newDecoration])\n\n      // Remove decoration after animation\n      setTimeout(() => {\n        setDecorations(prev => prev.filter(d => d.id !== newDecoration.id))\n      }, (newDecoration.duration + newDecoration.delay) * 1000)\n    }\n\n    // Add decoration every 3-8 seconds\n    const interval = setInterval(() => {\n      if (Math.random() < 0.3) { // 30% chance\n        addRandomDecoration()\n      }\n    }, 3000)\n\n    return () => clearInterval(interval)\n  }, [])\n\n  return (\n    <div className=\"fixed inset-0 pointer-events-none z-0\">\n      {decorations.map(decoration => (\n        <div\n          key={decoration.id}\n          className=\"absolute animate-random-float\"\n          style={{\n            left: decoration.x,\n            top: decoration.y,\n            fontSize: decoration.size,\n            animationDelay: `${decoration.delay}s`,\n            animationDuration: `${decoration.duration}s`\n          }}\n        >\n          {decoration.icon}\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default FloatingDecorations"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}